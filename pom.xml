<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>test_maven_springmvc</groupId>
  <artifactId>maven_springmvc</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>  <!--指定打包发布方式-->

    <!--可以不用-->
  <name>maven_springmvc Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
      <!--类似定义了一个变量，后面有使用-->
    <spring.version>4.2.6.RELEASE</spring.version>
    <hibernate.version>5.1.0.Final</hibernate.version>
  </properties>

    <!--添加依赖-->
  <dependencies>
      <!--每个依赖的结构<dependency></dependency>-->
    <!--单元测试-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <!--spring mvc,貌似添加这个足够：spring-webmvc-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>

      <!--JPA：Java持久层API。是JDK 5.0注解或XML描述对象－关系表的映射关系，并将运行期的实体对象持久化到数据库中-->
      <!--spring-data-jpa：Spring 的一个子项目。用于简化数据库访问，支持NoSQL 和 关系数据存储。其主要目标是使数据库的访问变得方便快捷-->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-jpa</artifactId>
      <version>1.10.1.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <!--<dependency>-->
      <!--<groupId>com.mchange</groupId>-->
      <!--<artifactId>c3p0</artifactId>-->
      <!--<version>0.9.5.2</version>-->
    <!--</dependency>-->

    <!--jsp need-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!--mysql驱动-->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.12</version>
    </dependency>

    <!--日志-->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.21</version>
    </dependency>

    <!--commons-logging只是一个高层的日志框架，本身没有实现真正的日志能力，它依赖其他的日志系统如log4j或者java本身的java.util.logging。
    可以通过配置文件来设定最终使用log4j还是java.util.logging。没有配置log4j的时候就会调用java.util.logging包-->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>



  </dependencies>





  <build>
    <finalName>maven_springmvc</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!--<plugin>-->
        <!--<artifactId>maven-clean-plugin</artifactId>-->
        <!--<version>3.0.0</version>-->
        <!--</plugin>-->
        <!--&lt;!&ndash; see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging &ndash;&gt;-->
        <!--<plugin>-->
        <!--<artifactId>maven-resources-plugin</artifactId>-->
        <!--<version>3.0.2</version>-->
        <!--</plugin>-->
        <!--<plugin>-->
        <!--<artifactId>maven-compiler-plugin</artifactId>-->
        <!--<version>3.7.0</version>-->
        <!--</plugin>-->
        <!--<plugin>-->
        <!--<artifactId>maven-surefire-plugin</artifactId>-->
        <!--<version>2.20.1</version>-->
        <!--</plugin>-->
        <!--<plugin>-->
        <!--<artifactId>maven-war-plugin</artifactId>-->
        <!--<version>3.2.0</version>-->
        <!--</plugin>-->
        <!--<plugin>-->
        <!--<artifactId>maven-install-plugin</artifactId>-->
        <!--<version>2.5.2</version>-->
        <!--</plugin>-->
        <!--<plugin>-->
        <!--<artifactId>maven-deploy-plugin</artifactId>-->
        <!--<version>2.8.2</version>-->
        <!--</plugin>-->
        <!--添加一个编译打包插件maven-compiler-plugin，指定jdk的版本-->
        <!--如果不指定jdk版本，可能导致编译不通过的问题-->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>
</project>
